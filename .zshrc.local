## PATH
#export PATH="\
#/opt/homebrew/bin:\
#/opt/homebrew/sbin:\
#/opt/homebrew/opt/ruby/bin:\
#/opt/homebrew/lib/ruby/gems/3.2.0/bin:\
#/opt/homebrew/opt/gnu-tar/libexec/gnubin:\
#/opt/homebrew/opt/curl/bin:\
#/opt/homebrew/opt/libpq/bin:\
#/opt/homebrew/opt/mysql-client/bin:\
#/opt/homebrew/opt/openjdk/bin:\
#${HOME}/.cargo/bin:\
#${HOME}/.go/bin:\
#${HOME}/.krew/bin:\
#${PATH}"

## Homebrewed autocompletion
#fpath=("${fpath[@]}" /opt/homebrew/share/zsh/site-functions /opt/homebrew/opt/curl/share/zsh/site-functions)
#export LDFLAGS="-L/opt/homebrew/opt/ruby/lib -L/opt/homebrew/opt/curl/lib -L/opt/homebrew/opt/libpq/lib"
#export CPPFLAGS="-I/opt/homebrew/opt/ruby/include -I/opt/homebrew/opt/curl/include -I/opt/homebrew/opt/libpq/include"
#export PKG_CONFIG_PATH="/opt/homebrew/opt/ruby/lib/pkgconfig"

## GNU Coreutils
# alias ls='ls --color=tty'
# alias rm='rm -I'
## macOS
# alias ls='ls -G'

## neovim
#alias vi=nvim
#alias vim=nvim
#export EDITOR=nvim

## fzf (arch)
#if [[ -f /usr/share/fzf/key-bindings.zsh ]]; then
#  source /usr/share/fzf/key-bindings.zsh
#fi

## fzf (brew)
#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

## Fix home/end/delete
#bindkey  "^[[H"   beginning-of-line
#bindkey  "^[[F"   end-of-line
#bindkey  "^[[3~"  delete-char

## Homebrewed Ruby
#export LDFLAGS="-L/opt/homebrew/opt/ruby/lib"
#export CPPFLAGS="-I/opt/homebrew/opt/ruby/include"
#export PKG_CONFIG_PATH="/opt/homebrew/opt/ruby/lib/pkgconfig"

## kubectl
#if (( $+commands[kubectl] )); then
#  source <(kubectl completion zsh)
#  alias k=kubectl
#fi
## kubectx
#if (( $+commands[kubectx] )); then
#  alias ktx=kubectx
#fi
## kubens
#if (( $+commands[kubens] )); then
#  alias kns=kubens
#fi

## Vault
#if (( $+commands[vault] )); then
#  autoload -U +X bashcompinit && bashcompinit
#  autoload -Uz compinit && compinit
#  export VAULT_ADDR=vault.example.com
#  complete -o nospace -C /usr/local/bin/vault vault
#fi

## AWSCLIv2
#complete -C aws_completer aws
#if [[ -f ~/.aws/current_profile ]]; then
#  read -r AWS_PROFILE < ~/.aws/current_profile
#  export AWS_PROFILE
#fi
#awsctx() {
#  # shellcheck disable=SC2016
#  AWS_PROFILE=$(FZF_DEFAULT_COMMAND='aws configure list-profiles | perl -pe "s/^(${AWS_PROFILE})$/\x1b[33m\1\x1b[0m/g"' fzf --ansi) &&\
#    mkdir -p ~/.aws &&\
#    cat <<< "${AWS_PROFILE}" > ~/.aws/current_profile &&\
#    export AWS_PROFILE
#}
#awsregion() {
#  # shellcheck disable=SC2016
#  FZF_DEFAULT_COMMAND='aws ec2 describe-regions --all-regions --query "Regions[].{Name:RegionName}" --output text | perl -pe "s/^(${REGION})$/\x1b[33m\1\x1b[0m/g"' \
#  REGION=$(aws configure get region) \
#  fzf --ansi | xargs aws configure set region
#}

## Cloudflare
#export CLOUDFLARE_EMAIL=simnalamburt@gmail.com
#export CLOUDFLARE_API_KEY=xxxxxxxx

## bat
#export BAT_PAGER='less -+XF -RSQc'

## Wayland
## Elementary/EFL
#export ECORE_EVAS_ENGINE=wayland_egl
#export ELM_ENGINE=wayland_egl
## SDL
#export SDL_VIDEODRIVER=wayland
## Java
#export _JAVA_AWT_WM_NONREPARENTING=1
#
## wl-clipboard
#alias pbcopy=wl-copy
#alias pbpaste=wl-paste

## kime
#export GTK_IM_MODULE='kime'
#export QT_IM_MODULE='kime'
#export XMODIFIERS='@im=kime'

## sway
#alias run-sway='systemd-cat -t sway sway'
#alias run-sway-gpu='WLR_DRM_DEVICES=/dev/dri/card0:/dev/dri/card1 systemd-cat -t sway sway'
#alias edit-clipboard='swappy -f <(wl-paste -t image/png) -o >(wl-copy -t image/png)'
#alias record='wf-recorder'
#alias record-part='wf-recorder -g "$(slurp)"'

## alacritty
#alias ssh='TERM=xterm-256color ssh'

## pnpm
#alias p=pnpm

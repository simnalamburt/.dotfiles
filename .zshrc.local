## PATH
#export PATH="\
#/opt/homebrew/bin:\
#/opt/homebrew/sbin:\
#/opt/homebrew/opt/ruby/bin:\
#/opt/homebrew/lib/ruby/gems/3.2.0/bin:\
#/opt/homebrew/opt/gnu-tar/libexec/gnubin:\
#/opt/homebrew/opt/curl/bin:\
#/opt/homebrew/opt/mysql-client/bin:\
#/opt/homebrew/Caskroom/sqlcl/25.1.1.113.2054/sqlcl/bin:\
#${HOME}/.cargo/bin:\
#${PATH}"
#export LDFLAGS="-L/opt/homebrew/opt/ruby/lib -L/opt/homebrew/opt/curl/lib"
#export CPPFLAGS="-I/opt/homebrew/opt/ruby/include -I/opt/homebrew/opt/curl/include"
#export PKG_CONFIG_PATH="/opt/homebrew/opt/ruby/lib/pkgconfig"
#export ANDROID_HOME="/opt/homebrew/share/android-commandlinetools"

## GNU Coreutils
# alias rm='rm -I'

## AI friends
#export GOOGLE_CLOUD_PROJECT='xxxxxx'
#alias claude='pnpm dlx @anthropic-ai/claude-code'
#alias gemini='pnpm dlx @google/gemini-cli'
#alias codex='pnpm dlx @openai/codex'

## aliases
#alias c=cargo
#alias cf='cargo fmt --all'
#alias ci='cargo fmt --check --all && cargo check --workspace && cargo clippy --workspace --no-deps && cargo test --workspace'
#alias zed=zed-preview
#alias code=code-insiders

## neovim
#alias v=nvim
#alias vi=nvim
#alias vim=nvim
#export EDITOR=nvim

## Fix home/end/delete
#bindkey  "^[[H"   beginning-of-line
#bindkey  "^[[F"   end-of-line
#bindkey  "^[[3~"  delete-char

## AWSCLIv2
#if [[ -f ~/.aws/current_profile ]]; then
#  read -r AWS_PROFILE < ~/.aws/current_profile
#  export AWS_PROFILE
#fi
#awsctx() {
#  # shellcheck disable=SC2016
#  AWS_PROFILE=$(FZF_DEFAULT_COMMAND='aws configure list-profiles | perl -pe "s/^(${AWS_PROFILE})$/\x1b[33m\1\x1b[0m/g"' fzf --ansi) &&\
#    mkdir -p ~/.aws &&\
#    cat <<< "${AWS_PROFILE}" > ~/.aws/current_profile &&\
#    export AWS_PROFILE
#}
#awsregion() {
#  # shellcheck disable=SC2016
#  FZF_DEFAULT_COMMAND='aws ec2 describe-regions --all-regions --query "Regions[].{Name:RegionName}" --output text | perl -pe "s/^(${REGION})$/\x1b[33m\1\x1b[0m/g"' \
#  REGION=$(aws configure get region) \
#  fzf --ansi | xargs aws configure set region
#}

## Google Cloud SDK
#if [ -f '/opt/homebrew/share/google-cloud-sdk/path.zsh.inc' ]; then . '/opt/homebrew/share/google-cloud-sdk/path.zsh.inc'; fi
#if [ -f '/opt/homebrew/share/google-cloud-sdk/completion.zsh.inc' ]; then . '/opt/homebrew/share/google-cloud-sdk/completion.zsh.inc'; fi


#
# macOS
#
## secretive
#export SSH_AUTH_SOCK="${HOME}/Library/Containers/com.maxgoedjen.Secretive.SecretAgent/Data/socket.ssh"
## noti
#noti() {
#  if (( $? == 0 )); then
#    osascript -e 'display notification "The command worked" with title "Success" sound name "Glass"'
#  else
#    osascript -e 'display notification "The command failed" with title "Failed" sound name "Sosumi"'
#  fi
#}


#
# WSL
#
## ssh-agent
#if ! pgrep -u "${USER}" ssh-agent > /dev/null; then
#  ssh-agent -t 1h > "${XDG_RUNTIME_DIR}/ssh-agent.env"
#fi
#if [[ ! -f "${SSH_AUTH_SOCK}" ]]; then
#  . "${XDG_RUNTIME_DIR}/ssh-agent.env" > /dev/null
#fi

# vim: noexpandtab sw=8
[user]
	name = Jihyeon Kim
	email = simnalamburt@gmail.com
	signingkey = "key::ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHw1kc3i4A/ix5HZigHIspFzT8BYiSFyoYPOSPzt8mhA"
[core]
	editor = nvim
	pager = DELTA_PAGER='less -+XF -RSc' delta
	excludesfile = ~/.gitexclude
	fscache = yes
	preloadindex = yes
	autocrlf = no
	quotepath = no
	precomposeunicode = yes
[init]
	# Run `git config --global init.defaultBranch main` to get this
	#
	# References:
	#   https://sfconservancy.org/news/2020/jun/23/gitbranchname/
	#   https://lore.kernel.org/git/pull.656.v4.git.1593009996.gitgitgadget@gmail.com/
	#   https://github.com/github/renaming/
	#   https://github.blog/changelog/2020-10-01-the-default-branch-for-newly-created-repositories-is-now-main/
	defaultBranch = main

	# TODO: Enable this when gitstatus supports it.o
	#
	# Reference: https://github.com/romkatv/gitstatus/issues/455
	# defaultRefFormat = reftable
[log]
	date = iso8601
[color]
	ui = auto
[diff]
	renames = copies
	algorithm = histogram
	submodule = log
[branch]
	sort = committerdate
[fetch]
	prune = yes
	prunetags = true
	fsckobjects = true
[transfer]
	fsckobjects = true
[receive]
	fsckObjects = true
[push]
	default = simple
[pull]
	rebase = true
[rebase]
	autostash = true
	autosquash = true
[merge]
	conflictstyle = zdiff3
[commit]
	verbose = true
	gpgsign = yes
[tag]
	gpgsign = true
[gpg]
	format = ssh
[gpg "ssh"]
	allowedSignersFile = ~/.dotfiles/.gitallowedsigners
[credential]
	interactive = false
	helper = git-credential-cache
[rerere]
	enabled = true
[stash]
	showPatch = true
[status]
	showStash = true
	submoduleSummary = true
[submodule]
	fetchJobs = 0
	recurse = true
[help]
	autocorrect = prompt
[url "git@github.com:"]
	insteadOf = https://github.com/
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[alias]
	# Complex and long git aliases.
	# Check out https://github.com/simnalamburt/cgitc for short aliases!

	# git all
	#
	# It shows *all* git commit references in a graph format, including dangling
	# or unreachable commits (e.g., popped stashes, etc.).
	all = "!_() { git log --oneline --graph --reflog $(git fsck --unreachable | perl -ne 'print \"$1\\n\" if /^\\w+ commit ([0-9a-f]+)$/'); }; _"

	# git pr [<remote>]
	#
	# Fetch pull requests from GitHub. Fetch "origin" if remote is not
	# specified.
	#
	# Usage:
	#   git pr
	#   git pr other
	pr = "!_() { git config fetch.prune no && git fetch ${1:-origin} +refs/pull/*/head:refs/remotes/${1:-origin}/pr/*; }; _"

	# git g
	#
	# Git graph with signature info
	g = "log --graph --pretty='format:%C(auto)%h%d %s%x1b[38;5;022m% GS %x1b[38;5;239m%cr%x1b[0m'"

	# git h <filename>
	#
	# Show history of a file
	#
	# Usage:
	#   git h README.md
	h = "log -p -M --follow"

	# git sed <regex>
	#
	# Find and replace patterns with given regex.
	#
	# Usage:
	#   git sed 's/yolo/swag/g'
	sed = "!_() { git ls-files -z | xargs -0 perl -i -pe ${1}; }; _"

	# git chdate
	#
	# Change git commit date and author date
	#
	# Usage:
	#   git chdate 2013-05-05T12:34:56+0800
	chdate = "!_() { GIT_COMMITTER_DATE=${1} git commit --amend --no-edit --date ${1}; }; _"

[include]
	path = ~/.gitconfig.local
